###############################################################################
#                          Generated on phpdocker.io                          #
###############################################################################

version: "3.7"
services:

    db:
        image: mysql/mysql-server:8.0
        container_name: ${CONTAINER_MYSQL_NAME}
        command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
        restart: always
        volumes:
            - ./docker/mysql/data:/var/lib/mysql
            - ./docker/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: root
        ports:
            - ${MYSQL_PORT_IN}:${MYSQL_PORT_OUT}

    nginx:
        build: docker/nginx
        container_name: ${CONTAINER_NGINX_NAME}
        working_dir: /application
        restart: always
        volumes:
            - .:/application
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - ${NGINX_PORT_IN_80}:${NGINX_PORT_OUT_80}
#            - ${NGINX_PORT_IN_443}:${NGINX_PORT_OUT_443}

    app:
        build: docker/php-fpm
        container_name: ${CONTAINER_PHP_FPM_NAME}
        restart: unless-stopped
        working_dir: /application
        #command: ["php", "/application/artisan", "queue:work", "--daemon"]
        volumes:
            - .:/application
            - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini

    redis:
        container_name: ${CONTAINER_REDIS_NAME}
        image: 'redis:6.0.10-alpine'
        domainname: "redis.${APP_NAME}.${APP_ENV}"
        hostname: "redis"
        restart: always
        environment:
            - REDIS_MAX_MEMORY=128mb
            - ALLOW_EMPTY_PASSWORD=yes
        logging:
            driver: "json-file"
            options:
                max-size: "256m"
                max-file: "10"
        networks:
            default:
                aliases:
                    - ${CONTAINER_REDIS_NAME}

    mailhog:
        container_name: ${CONTAINER_MAILHOG_NAME}
        image: 'mailhog/mailhog:latest'
        ports:
            - ${MAILHOG_PORT_IN_80}:${MAILHOG_PORT_OUT_80}
        networks:
            default:
                aliases:
                    - ${CONTAINER_MAILHOG_NAME}




# For more information: https://laravel.com/docs/sail
#version: '3'
#services:
#    laravel.test:
#        build:
#            context: ./vendor/laravel/sail/runtimes/8.0
#            dockerfile: Dockerfile
#            args:
#                WWWGROUP: '${WWWGROUP}'
#        image: sail-8.0/app
#        ports:
#            - '${APP_PORT:-80}:80'
#        environment:
#            WWWUSER: '${WWWUSER}'
#            LARAVEL_SAIL: 1
#        volumes:
#            - '.:/var/www/html'
#        networks:
#            - sail
#        depends_on:
#            - mysql
#            - redis
#            # - selenium
#    # selenium:
#    #     image: 'selenium/standalone-chrome'
#    #     volumes:
#    #         - '/dev/shm:/dev/shm'
#    #     networks:
#    #         - sail
#    #     depends_on:
#    #         - laravel.test
#    mysql:
#        image: 'mysql:8.0'
#        ports:
#            - '${FORWARD_DB_PORT:-3306}:3306'
#        environment:
#            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
#            MYSQL_DATABASE: '${DB_DATABASE}'
#            MYSQL_USER: '${DB_USERNAME}'
#            MYSQL_PASSWORD: '${DB_PASSWORD}'
#            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#        volumes:
#            - 'sailmysql:/var/lib/mysql'
#        networks:
#            - sail
#    redis:
#        image: 'redis:alpine'
#        ports:
#            - '${FORWARD_REDIS_PORT:-6379}:6379'
#        volumes:
#            - 'sailredis:/data'
#        networks:
#            - sail
#            # memcached:
#            #     image: 'memcached:alpine'
#            #     ports:
#            #         - '11211:11211'
#            #     networks:
#            #         - sail
#    mailhog:
#        image: 'mailhog/mailhog:latest'
#        ports:
#            - 1025:1025
#            - 8025:8025
#        networks:
#            - sail
#networks:
#    sail:
#        driver: bridge
#volumes:
#    sailmysql:
#        driver: local
#    sailredis:
#        driver: local
#
#
#
#
#
#
#    APP_NAME=LSM-Shop
#    APP_ENV=local
#    APP_KEY=base64:uTqoQM7bxRmAXPV6MxfvhoJjwZbEjhJxrfH8yR3TCuA=
#    APP_DEBUG=true
#    APP_URL=https://lcm-shop.project-release.info
#
#    LOG_CHANNEL=stack
#    LOG_LEVEL=debug
#
#    DB_CONNECTION=mysql
#    DB_HOST=127.0.0.1
#    DB_PORT=3310
#    DB_DATABASE=lcmshop_db80
#    DB_USERNAME=lcmshop_user80
#    DB_PASSWORD=vH9xA4eA6omA9f
#
#    BROADCAST_DRIVER=log
#    CACHE_DRIVER=file
#    QUEUE_CONNECTION=sync
#    SESSION_DRIVER=file
#    SESSION_LIFETIME=120
#
#    MEMCACHED_HOST=127.0.0.1
#
#    REDIS_HOST=127.0.0.1
#    REDIS_PASSWORD=null
#    REDIS_PORT=6379
#
#    MAIL_MAILER=smtp
#    MAIL_HOST=mailhog
#    MAIL_PORT=1025
#    MAIL_USERNAME=null
#    MAIL_PASSWORD=null
#    MAIL_ENCRYPTION=null
#    MAIL_FROM_ADDRESS=null
#    MAIL_FROM_NAME="${APP_NAME}"
#
#    AWS_ACCESS_KEY_ID=
#    AWS_SECRET_ACCESS_KEY=
#    AWS_DEFAULT_REGION=us-east-1
#    AWS_BUCKET=
#
#    PUSHER_APP_ID=
#    PUSHER_APP_KEY=
#    PUSHER_APP_SECRET=
#    PUSHER_APP_CLUSTER=mt1
#
#    MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
#    MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"